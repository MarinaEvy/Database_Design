package com.gatech.cs6400.jsf.dao;

import java.sql.*;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.gatech.cs6400.jsf.util.DataConnect;
import com.gatech.cs6400.jsf.util.SessionUtils;

import javax.faces.model.SelectItem;

public class ResourceDAO {



    public static ArrayList<SelectItem> allESF;
    static{

        allESF = new ArrayList<SelectItem>();
        Connection con = null;
        try {
            con = DataConnect.getConnection();
            PreparedStatement preparedStatement =
                    con.prepareStatement("SELECT * FROM esf");
            ResultSet rs = preparedStatement.executeQuery();

            while (rs.next()) {
                allESF.add( new SelectItem(Integer.toString(rs.getInt(1)),
                        Integer.toString(rs.getInt(1)) + ":" + rs.getString(2)));
                System.out.println(Integer.toString(rs.getInt(1))+ ":"
                        + rs.getString(2));
            }

        } catch (SQLException ex) {
            System.out.println("Login error -->" + ex.getMessage());
        } finally {
            DataConnect.close(con);
        }
    }
    public static ArrayList<SelectItem> getAllESF()
    {
        return allESF;
    }

    public static ArrayList<SelectItem> allUnit;
    static{

        allUnit = new ArrayList<SelectItem>();
        Connection con = null;
        try {
            con = DataConnect.getConnection();
            PreparedStatement preparedStatement =
                    con.prepareStatement("SELECT * FROM unit");
            ResultSet rs = preparedStatement.executeQuery();

            while (rs.next()) {
                allUnit.add( new SelectItem(rs.getString(1)));
                System.out.println("UNIT:"+ rs.getString(1));
            }

        } catch (SQLException ex) {
            System.out.println("Login error -->" + ex.getMessage());
        } finally {
            DataConnect.close(con);
        }
    }
    public static ArrayList<SelectItem> getAllUnit()
    {
        return allUnit;
    }


    public static int insertResource(    String resourceName,
                                         String model,
                                         String latitude,
                                         String longitude,
                                         String priESF,
                                         String dollarAmount,
                                         String costUnit) {
        Connection con = null;
        try {
            con = DataConnect.getConnection();
            PreparedStatement preparedStatement =
                    con.prepareStatement("INSERT INTO resource (Username, ResourceName, Model, Status, Latitude," +
                                    " Longitude, PrimaryESF, Dollar, Per ) VALUES (?,?,?,?,?,?,?,?,?)",
                            Statement.RETURN_GENERATED_KEYS);
            // Retrieves username from Session
            preparedStatement.setString(1, SessionUtils.getUserName());
            preparedStatement.setString(2, resourceName);
            preparedStatement.setString(3, model);
            preparedStatement.setString(4, "Available");
            preparedStatement.setString(5, latitude);
            preparedStatement.setString(6, longitude);
            preparedStatement.setString(7, priESF); // To be set to Key
            preparedStatement.setString(8, dollarAmount);
            preparedStatement.setString(9, costUnit); // To be set to Key
            preparedStatement.executeUpdate();
            ResultSet tableKeys = preparedStatement.getGeneratedKeys();
            tableKeys.next();
            int autoGeneratedID = tableKeys.getInt(1);
            return autoGeneratedID;

        } catch (SQLException ex) {
            System.out.println("Login error -->" + ex.getMessage());
            return -1;
        } finally {
            DataConnect.close(con);
        }
    }
    public static void insertSecondaryESF( int esfID, int resourceID)
    {
        Connection con = null;
        try {
            con = DataConnect.getConnection();
            PreparedStatement preparedStatement =
                    con.prepareStatement("INSERT INTO secondaryesf (ESF_ID, ResourceID ) VALUES (?,?)",
                            Statement.RETURN_GENERATED_KEYS);
            // Retrieves username from Session
            preparedStatement.setInt(1, esfID);
            preparedStatement.setInt(2, resourceID);
            preparedStatement.executeUpdate();
            return ;

        } catch (SQLException ex) {
            System.out.println("Login error -->" + ex.getMessage());
            return;
        } finally {
            DataConnect.close(con);
        }

    }
    public static void insertTarget( String table, String attribute, String element, int resourceID)
    {
        Connection con = null;
        try {
            con = DataConnect.getConnection();
            PreparedStatement preparedStatement =
                    con.prepareStatement("INSERT INTO " +
                            table + " ("+ attribute +", ResourceID ) VALUES (?,?)",
                            Statement.RETURN_GENERATED_KEYS);
            // Retrieves username from Session
            preparedStatement.setString(1, element);
            preparedStatement.setInt(2, resourceID);
            preparedStatement.executeUpdate();
            return ;

        } catch (SQLException ex) {
            System.out.println("Login error -->" + ex.getMessage());
            return;
        } finally {
            DataConnect.close(con);
        }

    }

    public static List<SelectItem> getSecondaryESFList(String primaryESF) {
        System.out.println("ResourceBeanDAO: SecondaryList:"+primaryESF);
        List<SelectItem> secondaryESF = new ArrayList<SelectItem>();
        Connection con = null;
        try {
            con = DataConnect.getConnection();
            PreparedStatement preparedStatement =
                    con.prepareStatement("SELECT * FROM esf WHERE ESF_ID<>"+primaryESF);
            ResultSet rs = preparedStatement.executeQuery();

            while (rs.next()) {
                secondaryESF.add( new SelectItem(Integer.toString(rs.getInt(1)),
                        Integer.toString(rs.getInt(1)) + ":" + rs.getString(2)));
                System.out.println(Integer.toString(rs.getInt(1))+ ":"
                        + rs.getString(2));
            }

        } catch (SQLException ex) {
            System.out.println("Login error -->" + ex.getMessage());
        } finally {
            DataConnect.close(con);
        }
        return secondaryESF;
    }
}

